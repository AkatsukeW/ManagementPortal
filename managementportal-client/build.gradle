import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

/*
 * Copyright (c) 2020. The Hyve
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 *
 * See the file LICENSE in the root of this repository.
 */
plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.7.22"
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.7.22'
    id 'org.jetbrains.dokka' version "1.7.20"
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

description = "Kotlin ManagementPortal client"

dependencies {
    api("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.22")
    implementation("org.jetbrains.kotlin:kotlin-reflect:1.7.22")

    api(platform("org.jetbrains.kotlinx:kotlinx-coroutines-bom:$coroutines_version"))
    api(platform("io.ktor:ktor-bom:$ktor_version"))
    api("io.ktor:ktor-client-core")
    implementation("io.ktor:ktor-client-auth")
    implementation("io.ktor:ktor-client-cio")
    implementation("io.ktor:ktor-client-content-negotiation")
    implementation("io.ktor:ktor-serialization-kotlinx-json")

    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test")
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junit_version
    testImplementation group: 'com.github.tomakehurst', name: 'wiremock', version: '2.27.2'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: mockito_version
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'

    testRuntimeOnly group: 'org.slf4j', name: 'slf4j-simple', version: slf4j_version
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junit_version
}

tasks.withType(KotlinCompile) {
    kotlinOptions {
        jvmTarget = "11"
        apiVersion = "1.7"
        languageVersion = "1.7"
    }
}

task ghPagesJavadoc(type: Copy, dependsOn: dokkaJavadoc) {
    from file("$buildDir/dokka/javadoc")
    into file("$rootDir/public/managementportal-client-javadoc")
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
    useJUnitPlatform()
}

ext.projectLanguage = "kotlin"
ext.publishToMavenCentral = true

apply from: "$rootDir/gradle/publishing.gradle"
