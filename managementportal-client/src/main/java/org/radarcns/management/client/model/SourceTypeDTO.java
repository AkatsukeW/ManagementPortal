/*
 * ManagementPortal API
 * ManagementPortal API documentation
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.radarcns.management.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.radarcns.management.client.model.SourceDataDTO;
import org.radarcns.management.client.model.SourceTypeId;

/**
 * SourceTypeDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-12-01T13:18:11.102+01:00")
public class SourceTypeDTO {
  @SerializedName("appProvider")
  private String appProvider = null;

  @SerializedName("assessmentType")
  private String assessmentType = null;

  @SerializedName("canRegisterDynamically")
  private Boolean canRegisterDynamically = null;

  @SerializedName("catalogVersion")
  private String catalogVersion = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("model")
  private String model = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("producer")
  private String producer = null;

  @SerializedName("sourceData")
  private List<SourceDataDTO> sourceData = new ArrayList<SourceDataDTO>();

  @SerializedName("sourceTypeId")
  private SourceTypeId sourceTypeId = null;

  /**
   * Gets or Sets sourceTypeScope
   */
  public enum SourceTypeScopeEnum {
    @SerializedName("ACTIVE")
    ACTIVE("ACTIVE"),
    
    @SerializedName("PASSIVE")
    PASSIVE("PASSIVE"),
    
    @SerializedName("MONITOR")
    MONITOR("MONITOR");

    private String value;

    SourceTypeScopeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("sourceTypeScope")
  private SourceTypeScopeEnum sourceTypeScope = null;

  public SourceTypeDTO appProvider(String appProvider) {
    this.appProvider = appProvider;
    return this;
  }

   /**
   * Get appProvider
   * @return appProvider
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getAppProvider() {
    return appProvider;
  }

  public void setAppProvider(String appProvider) {
    this.appProvider = appProvider;
  }

  public SourceTypeDTO assessmentType(String assessmentType) {
    this.assessmentType = assessmentType;
    return this;
  }

   /**
   * Get assessmentType
   * @return assessmentType
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getAssessmentType() {
    return assessmentType;
  }

  public void setAssessmentType(String assessmentType) {
    this.assessmentType = assessmentType;
  }

  public SourceTypeDTO canRegisterDynamically(Boolean canRegisterDynamically) {
    this.canRegisterDynamically = canRegisterDynamically;
    return this;
  }

   /**
   * Get canRegisterDynamically
   * @return canRegisterDynamically
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public Boolean getCanRegisterDynamically() {
    return canRegisterDynamically;
  }

  public void setCanRegisterDynamically(Boolean canRegisterDynamically) {
    this.canRegisterDynamically = canRegisterDynamically;
  }

  public SourceTypeDTO catalogVersion(String catalogVersion) {
    this.catalogVersion = catalogVersion;
    return this;
  }

   /**
   * Get catalogVersion
   * @return catalogVersion
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getCatalogVersion() {
    return catalogVersion;
  }

  public void setCatalogVersion(String catalogVersion) {
    this.catalogVersion = catalogVersion;
  }

  public SourceTypeDTO description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public SourceTypeDTO id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public SourceTypeDTO model(String model) {
    this.model = model;
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getModel() {
    return model;
  }

  public void setModel(String model) {
    this.model = model;
  }

  public SourceTypeDTO name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SourceTypeDTO producer(String producer) {
    this.producer = producer;
    return this;
  }

   /**
   * Get producer
   * @return producer
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getProducer() {
    return producer;
  }

  public void setProducer(String producer) {
    this.producer = producer;
  }

  public SourceTypeDTO sourceData(List<SourceDataDTO> sourceData) {
    this.sourceData = sourceData;
    return this;
  }

  public SourceTypeDTO addSourceDataItem(SourceDataDTO sourceDataItem) {
    this.sourceData.add(sourceDataItem);
    return this;
  }

   /**
   * Get sourceData
   * @return sourceData
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<SourceDataDTO> getSourceData() {
    return sourceData;
  }

  public void setSourceData(List<SourceDataDTO> sourceData) {
    this.sourceData = sourceData;
  }

  public SourceTypeDTO sourceTypeId(SourceTypeId sourceTypeId) {
    this.sourceTypeId = sourceTypeId;
    return this;
  }

   /**
   * Get sourceTypeId
   * @return sourceTypeId
  **/
  @ApiModelProperty(example = "null", value = "")
  public SourceTypeId getSourceTypeId() {
    return sourceTypeId;
  }

  public void setSourceTypeId(SourceTypeId sourceTypeId) {
    this.sourceTypeId = sourceTypeId;
  }

  public SourceTypeDTO sourceTypeScope(SourceTypeScopeEnum sourceTypeScope) {
    this.sourceTypeScope = sourceTypeScope;
    return this;
  }

   /**
   * Get sourceTypeScope
   * @return sourceTypeScope
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public SourceTypeScopeEnum getSourceTypeScope() {
    return sourceTypeScope;
  }

  public void setSourceTypeScope(SourceTypeScopeEnum sourceTypeScope) {
    this.sourceTypeScope = sourceTypeScope;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SourceTypeDTO sourceTypeDTO = (SourceTypeDTO) o;
    return Objects.equals(this.appProvider, sourceTypeDTO.appProvider) &&
        Objects.equals(this.assessmentType, sourceTypeDTO.assessmentType) &&
        Objects.equals(this.canRegisterDynamically, sourceTypeDTO.canRegisterDynamically) &&
        Objects.equals(this.catalogVersion, sourceTypeDTO.catalogVersion) &&
        Objects.equals(this.description, sourceTypeDTO.description) &&
        Objects.equals(this.id, sourceTypeDTO.id) &&
        Objects.equals(this.model, sourceTypeDTO.model) &&
        Objects.equals(this.name, sourceTypeDTO.name) &&
        Objects.equals(this.producer, sourceTypeDTO.producer) &&
        Objects.equals(this.sourceData, sourceTypeDTO.sourceData) &&
        Objects.equals(this.sourceTypeId, sourceTypeDTO.sourceTypeId) &&
        Objects.equals(this.sourceTypeScope, sourceTypeDTO.sourceTypeScope);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appProvider, assessmentType, canRegisterDynamically, catalogVersion, description, id, model, name, producer, sourceData, sourceTypeId, sourceTypeScope);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SourceTypeDTO {\n");
    
    sb.append("    appProvider: ").append(toIndentedString(appProvider)).append("\n");
    sb.append("    assessmentType: ").append(toIndentedString(assessmentType)).append("\n");
    sb.append("    canRegisterDynamically: ").append(toIndentedString(canRegisterDynamically)).append("\n");
    sb.append("    catalogVersion: ").append(toIndentedString(catalogVersion)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    producer: ").append(toIndentedString(producer)).append("\n");
    sb.append("    sourceData: ").append(toIndentedString(sourceData)).append("\n");
    sb.append("    sourceTypeId: ").append(toIndentedString(sourceTypeId)).append("\n");
    sb.append("    sourceTypeScope: ").append(toIndentedString(sourceTypeScope)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

