/*
 * ManagementPortal API
 * ManagementPortal API documentation
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.radarcns.management.client.api;

import org.radarcns.management.client.ApiException;
import org.radarcns.management.client.model.ProjectDTO;
import org.radarcns.management.client.model.ResponseEntity;
import org.radarcns.management.client.model.RoleDTO;
import org.radarcns.management.client.model.SourceTypeDTO;
import org.radarcns.management.client.model.SubjectDTO;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectResourceApi
 */
@Ignore
public class ProjectResourceApiTest {

    private final ProjectResourceApi api = new ProjectResourceApi();

    
    /**
     * createProject
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createProjectUsingPOSTTest() throws ApiException {
        ProjectDTO projectDTO = null;
        ProjectDTO response = api.createProjectUsingPOST(projectDTO);

        // TODO: test validations
    }
    
    /**
     * deleteProject
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteProjectUsingDELETETest() throws ApiException {
        String projectName = null;
        api.deleteProjectUsingDELETE(projectName);

        // TODO: test validations
    }
    
    /**
     * getAllProjects
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllProjectsUsingGETTest() throws ApiException {
        Boolean minimized = null;
        List<ProjectDTO> response = api.getAllProjectsUsingGET(minimized);

        // TODO: test validations
    }
    
    /**
     * getAllSourcesForProject
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllSourcesForProjectUsingGETTest() throws ApiException {
        String projectName = null;
        Boolean assigned = null;
        Boolean minimized = null;
        ResponseEntity response = api.getAllSourcesForProjectUsingGET(projectName, assigned, minimized);

        // TODO: test validations
    }
    
    /**
     * getAllSubjects
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllSubjectsUsingGETTest() throws ApiException {
        String projectName = null;
        List<SubjectDTO> response = api.getAllSubjectsUsingGET(projectName);

        // TODO: test validations
    }
    
    /**
     * getProject
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProjectUsingGETTest() throws ApiException {
        String projectName = null;
        ProjectDTO response = api.getProjectUsingGET(projectName);

        // TODO: test validations
    }
    
    /**
     * getRolesByProject
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRolesByProjectUsingGETTest() throws ApiException {
        String projectName = null;
        List<RoleDTO> response = api.getRolesByProjectUsingGET(projectName);

        // TODO: test validations
    }
    
    /**
     * getSourceTypesOfProject
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSourceTypesOfProjectUsingGETTest() throws ApiException {
        String projectName = null;
        List<SourceTypeDTO> response = api.getSourceTypesOfProjectUsingGET(projectName);

        // TODO: test validations
    }
    
    /**
     * updateProject
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateProjectUsingPUTTest() throws ApiException {
        ProjectDTO projectDTO = null;
        ProjectDTO response = api.updateProjectUsingPUT(projectDTO);

        // TODO: test validations
    }
    
}
