/*
 * ManagementPortal API
 * ManagementPortal API documentation
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.radarcns.management.client.api;

import org.radarcns.management.client.ApiException;
import org.radarcns.management.client.model.SourceTypeDTO;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SourceTypeResourceApi
 */
@Ignore
public class SourceTypeResourceApiTest {

    private final SourceTypeResourceApi api = new SourceTypeResourceApi();

    
    /**
     * createSourceType
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSourceTypeUsingPOSTTest() throws ApiException {
        SourceTypeDTO sourceTypeDTO = null;
        SourceTypeDTO response = api.createSourceTypeUsingPOST(sourceTypeDTO);

        // TODO: test validations
    }
    
    /**
     * deleteSourceType
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSourceTypeUsingDELETETest() throws ApiException {
        String producer = null;
        String model = null;
        String version = null;
        api.deleteSourceTypeUsingDELETE(producer, model, version);

        // TODO: test validations
    }
    
    /**
     * getAllSourceTypes
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllSourceTypesUsingGETTest() throws ApiException {
        List<SourceTypeDTO> response = api.getAllSourceTypesUsingGET();

        // TODO: test validations
    }
    
    /**
     * getSourceTypes
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSourceTypesUsingGETTest() throws ApiException {
        String producer = null;
        String model = null;
        String version = null;
        SourceTypeDTO response = api.getSourceTypesUsingGET(producer, model, version);

        // TODO: test validations
    }
    
    /**
     * getSourceTypes
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSourceTypesUsingGET1Test() throws ApiException {
        String producer = null;
        String model = null;
        List<SourceTypeDTO> response = api.getSourceTypesUsingGET1(producer, model);

        // TODO: test validations
    }
    
    /**
     * getSourceTypes
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSourceTypesUsingGET2Test() throws ApiException {
        String producer = null;
        List<SourceTypeDTO> response = api.getSourceTypesUsingGET2(producer);

        // TODO: test validations
    }
    
    /**
     * updateSourceType
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSourceTypeUsingPUTTest() throws ApiException {
        SourceTypeDTO sourceTypeDTO = null;
        SourceTypeDTO response = api.updateSourceTypeUsingPUT(sourceTypeDTO);

        // TODO: test validations
    }
    
}
