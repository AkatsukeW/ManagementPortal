/*
 * ManagementPortal API
 * ManagementPortal API documentation
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.radarcns.management.client.api;

import org.radarcns.management.client.ApiException;
import org.radarcns.management.client.model.MinimalSourceDetailsDTO;
import org.radarcns.management.client.model.SubjectDTO;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SubjectResourceApi
 */
@Ignore
public class SubjectResourceApiTest {

    private final SubjectResourceApi api = new SubjectResourceApi();

    
    /**
     * assignSources
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void assignSourcesUsingPOSTTest() throws ApiException {
        String login = null;
        MinimalSourceDetailsDTO sourceDTO = null;
        MinimalSourceDetailsDTO response = api.assignSourcesUsingPOST(login, sourceDTO);

        // TODO: test validations
    }
    
    /**
     * createSubject
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSubjectUsingPOSTTest() throws ApiException {
        SubjectDTO subjectDTO = null;
        SubjectDTO response = api.createSubjectUsingPOST(subjectDTO);

        // TODO: test validations
    }
    
    /**
     * deleteSubject
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSubjectUsingDELETETest() throws ApiException {
        String login = null;
        api.deleteSubjectUsingDELETE(login);

        // TODO: test validations
    }
    
    /**
     * discontinueSubject
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void discontinueSubjectUsingPUTTest() throws ApiException {
        SubjectDTO subjectDTO = null;
        SubjectDTO response = api.discontinueSubjectUsingPUT(subjectDTO);

        // TODO: test validations
    }
    
    /**
     * getAllSubjects
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllSubjectsUsingGET1Test() throws ApiException {
        String projectName = null;
        String externalId = null;
        List<SubjectDTO> response = api.getAllSubjectsUsingGET1(projectName, externalId);

        // TODO: test validations
    }
    
    /**
     * getSubjectSources
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSubjectSourcesUsingGETTest() throws ApiException {
        String login = null;
        List<MinimalSourceDetailsDTO> response = api.getSubjectSourcesUsingGET(login);

        // TODO: test validations
    }
    
    /**
     * getSubject
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSubjectUsingGETTest() throws ApiException {
        String login = null;
        SubjectDTO response = api.getSubjectUsingGET(login);

        // TODO: test validations
    }
    
    /**
     * updateSubject
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSubjectUsingPUTTest() throws ApiException {
        SubjectDTO subjectDTO = null;
        SubjectDTO response = api.updateSubjectUsingPUT(subjectDTO);

        // TODO: test validations
    }
    
}
